1. What happens when you initialize a repository? Why do you need to do it?

A repository is what allows you to actually implement version control.  W/o a repository you can't make commits or use git effectively.

2. How is the staging area different from the working directory and the repository? What value do you think it offers?

The Staging Area is powerful because it gives granular control over which files you'd like to commit.  You can commit a single file or multiple files all at once.

3. How can you use the staging area to make sure you have one commit per logical change?

You can compare the difference in the staging area files to your last commit to make sure you only commit 1 logical change.

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help

An example of when branches would be useful in a situation is if you had a game and wanted to create an easier mode for it.  You could keep the original version in the master branch and create an easy-mode branch to experiment on w/o breaking the master copy.

5. How do the diagrams help you visualize the branch structure?

Diagrams are inherently visual.

6.What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Merging two branch takes all of the changes from a side branch and adds them to the master branch.  We represent it in the diagram because the side is merging to the master not the other way around.